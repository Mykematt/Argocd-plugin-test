steps:
  - label: "üì¶ Step 1: Deploy Good Baseline (main branch)"
    key: "deploy-good-baseline"
    agents:
      queue: kubernetes
    command: |
      echo "--- Setting ArgoCD app to main branch (good image)"
      argocd login "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_SERVER" --username "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_USERNAME" --password "$ARGOCD_PASSWORD" --insecure
      argocd app set test-nginx-app --revision main
    plugins:
      - secrets#v1.0.0:
          variables:
            ARGOCD_PASSWORD: argocd_password
      - github.com/Mykematt/argocd-deployment-buildkite-plugin#4281d5f:
          app: "test-nginx-app"
          argocd_server: "argocd-server.argocd.svc.cluster.local:443"
          argocd_username: "admin"
          mode: "deploy"
          timeout: 300
          collect_logs: true
          upload_artifacts: true

  - label: "üö® Step 2: Deploy Broken + Auto Rollback (feat branch)"
    key: "deploy-broken-auto-rollback"
    depends_on: "deploy-good-baseline"
    agents:
      queue: kubernetes
    command: |
      echo "--- Setting ArgoCD app to feat branch (broken image)"
      argocd login "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_SERVER" --username "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_USERNAME" --password "$ARGOCD_PASSWORD" --insecure
      argocd app set test-nginx-app --revision feat
    plugins:
      - secrets#v1.0.0:
          variables:
            ARGOCD_PASSWORD: argocd_password
      - github.com/Mykematt/argocd-deployment-buildkite-plugin#4281d5f:
          app: "test-nginx-app"
          argocd_server: "argocd-server.argocd.svc.cluster.local:443"
          argocd_username: "admin"
          mode: "deploy"
          rollback_mode: "auto"
          timeout: 300
          health_check: true
          health_check_timeout: 120
          collect_logs: true
          upload_artifacts: true

  - label: "ü§î Step 3: Deploy Broken + Manual Decision (feat branch)"
    key: "deploy-broken-manual-decision"
    depends_on: "deploy-broken-auto-rollback"
    agents:
      queue: kubernetes
    command: |
      echo "--- Setting ArgoCD app to feat branch (broken image)"
      argocd login "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_SERVER" --username "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_USERNAME" --password "$ARGOCD_PASSWORD" --insecure
      argocd app set test-nginx-app --revision feat
    plugins:
      - secrets#v1.0.0:
          variables:
            ARGOCD_PASSWORD: argocd_password
      - github.com/Mykematt/argocd-deployment-buildkite-plugin#4281d5f:
          app: "test-nginx-app"
          argocd_server: "argocd-server.argocd.svc.cluster.local:443"
          argocd_username: "admin"
          mode: "deploy"
          rollback_mode: "manual"
          timeout: 300
          health_check: true
          health_check_timeout: 120
          collect_logs: true
          upload_artifacts: true

  - label: "üîÑ Step 4: Explicit Auto Rollback (feat branch)"
    key: "explicit-auto-rollback"
    depends_on: "deploy-broken-manual-decision"
    agents:
      queue: kubernetes
    command: |
      echo "--- Setting ArgoCD app to feat branch (for rollback context)"
      argocd login "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_SERVER" --username "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_USERNAME" --password "$ARGOCD_PASSWORD" --insecure
      argocd app set test-nginx-app --revision feat
    plugins:
      - secrets#v1.0.0:
          variables:
            ARGOCD_PASSWORD: argocd_password
      - github.com/Mykematt/argocd-deployment-buildkite-plugin#4281d5f:
          app: "test-nginx-app"
          argocd_server: "argocd-server.argocd.svc.cluster.local:443"
          argocd_username: "admin"
          mode: "rollback"
          rollback_mode: "auto"
          timeout: 300
          collect_logs: true
          upload_artifacts: true

  - label: "üéØ Step 5: Manual Rollback to Specific Target (feat branch)"
    key: "manual-rollback-specific"
    depends_on: "explicit-auto-rollback"
    agents:
      queue: kubernetes
    command: |
      echo "--- Setting ArgoCD app to feat branch (for rollback context)"
      argocd login "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_SERVER" --username "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_USERNAME" --password "$ARGOCD_PASSWORD" --insecure
      argocd app set test-nginx-app --revision feat
    plugins:
      - secrets#v1.0.0:
          variables:
            ARGOCD_PASSWORD: argocd_password
      - github.com/Mykematt/argocd-deployment-buildkite-plugin#4281d5f:
          app: "test-nginx-app"
          argocd_server: "argocd-server.argocd.svc.cluster.local:443"
          argocd_username: "admin"
          mode: "rollback"
          rollback_mode: "manual"
          target_revision: "1"  # Rollback to first deployment (baseline)
          timeout: 300
          collect_logs: true
          upload_artifacts: true

  - label: "‚ùå Step 6: Manual Accept Failure (feat branch)"
    key: "manual-accept-failure"
    depends_on: "manual-rollback-specific"
    agents:
      queue: kubernetes
    command: |
      echo "--- Setting ArgoCD app to feat branch (broken image)"
      argocd login "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_SERVER" --username "$BUILDKITE_PLUGIN_ARGOCD_DEPLOYMENT_ARGOCD_USERNAME" --password "$ARGOCD_PASSWORD" --insecure
      argocd app set test-nginx-app --revision feat
      echo "--- This step will deploy broken version and user should select 'Accept Failure'"
    plugins:
      - secrets#v1.0.0:
          variables:
            ARGOCD_PASSWORD: argocd_password
      - github.com/Mykematt/argocd-deployment-buildkite-plugin#4281d5f:
          app: "test-nginx-app"
          argocd_server: "argocd-server.argocd.svc.cluster.local:443"
          argocd_username: "admin"
          mode: "deploy"
          rollback_mode: "manual"
          timeout: 300
          health_check: true
          health_check_timeout: 120
          collect_logs: true
          upload_artifacts: true
          notifications:
            slack_channel: "U08SQPXLH26"